* Prevalence CI Calibration

This simulation study tests the coverage of the CI under the NB approximation.
It does this using the application =simulation-study-aggregated-observations=
with a set of suitable configuration files which each live in their own
subdirectory of =./out=.

** Example results

Below are the CIs from the original simulated data (i.e. the unscheduled
events).

*** Prevalence at present

[[./out/replication-results-prevalence-bias-regular_data.png]]

*** Basic reproduction number

Here are the \(95\%\) credible intervals for the basic reproduction number in
each of the replicates. The dashed line indicates the true value used in the
simulations.

[[./out/replication-results-r-naught-regular_data.png]]

*** ESS as MCMC diagnostic

The following figure shows the ESS for each of the parameters in each replicate
as calculated by =coda=, the dashed line indicates an effective sample size of
200 which is a standard threshold used in the phylodynamics literature.

[[./out/mcmc-ess-regular_data.png]]

** Usage

There is a script =run.sh= to run the replication study and a script =clean.sh=
to remove the results of previous runs. Note that =run.sh= needs to be run with
bash rather than just =sh= for the parallelism to work. The computation is split
up into groups of 10 to avoid using up all the resources at once and crashing my
machine. You will need to manually adjust this to have the correct loops if you
want to change the settings.

*WARNING* if you have not compiled, you will need to run =stack build= before
hand.

** Parameters

This uses the parameters specified in =bdscod/example/example-parameters.json=
for the rates of unscheduled events. The timings of the scheduled events and the
configuration of the MCMC are hard coded in the =src/generate-config-files.R=
script.

** Visualisation

Making the figures is a two step process: first, the results are summarized by
the =summarize-results.R= script and stored in a JSON file; second, the
=plotter.R= script uses the data in that JSON to create the figures. This means
that the number crunching is separated from the visualisation making it easier
to edit the figures. The =plotter.R= script also produces an HTML file with some
summary statistics about how the simulations went.
